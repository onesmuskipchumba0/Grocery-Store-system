# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import webbrowser
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication,QMessageBox
from PyQt5.QtGui import QTextDocument
from PyQt5.QtPrintSupport import QPrinter, QPrintDialog
import numpy as np
import sales_reports,add_product,customer_dashboard,delete_customer,update_customer,delete_product,update_product,new_customer,new_sales,inventory_dashboard,sales_dashboard
from models import products,recipts, sales,session
class Ui_MainWindow(object):
        def __init__(self):
                
                self.parent_widget = QtWidgets.QWidget()
                self.item_totals = []
                self.item_receipts = []
        
        def addInventory(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = add_product.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def cancelReceipt(self):
                self.item_totals = []
                self.textBrowser.setText(
                        """
                        Customer Receipt
----------------------------------------------------------
Item                    Amount  Cost   Total
----------------------------------------------------------
"""
                )
                
        def newSales(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = new_sales.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def generateSalesReports(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = sales_reports.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()                
        def newCustomer(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = new_customer.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def viewInventory(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = inventory_dashboard.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def addProduct(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = add_product.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def updateProduct(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = update_product.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def removeProduct(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = delete_product.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def viewSalesHistory(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = sales_dashboard.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def viewCustomerList(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = customer_dashboard.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def addCustomer(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = new_customer.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def updateCustomer(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = update_customer.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def removeCustomer(self):
                self.window = QtWidgets.QMainWindow()
                self.ui = delete_customer.Ui_Form()
                self.ui.setupUi(self.window)
                self.window.show()
        def helpBrowser(self):
                webbrowser.open('onesmusbett.wordpress.com')
        def callDeveloper(self):
                webbrowser.open('onesmusbett.wordpress.com/contacts')
        def aboutCreator(self):
                webbrowser.open('onesmusbett.wordpress.com/about')
        def aboutHome(self):
                webbrowser.open('onesmusbett.wordpress.com/portfolio')
        def post_btn_click(self):
                # Extract 'total' values from each dictionary in self.item_totals
                totals = [item['total'] for item in self.item_totals]

                # Calculate the sum of 'total' values
                total_sales = sum(totals)
                # Print the new total
                if total_sales <=0:
                        QMessageBox.critical(self.parent_widget,'Value error','Total sales can not be zero')
                else:
                        new_sale = sales(totals=total_sales)
                        session.add(new_sale)
                        session.commit()
                        QMessageBox.information(self.parent_widget,'Data posted successfully','The sales data has been added to the database')
                        print(f"Total Sales: {total_sales}")
                        total_sales = 0
                        self.item_totals = []
                        self.label_30.setText('ksh. 0.0')

        def clicked_(self):
                product = self.list_searched.currentItem().text()
                self.product_search.setText(product)
        def searchFunc(self):
                self.list_searched.clear()
                products_ = session.query(products).filter(products.name.contains(self.product_search.text().upper())).all()
                if not products_:
                        self.list_searched.clear()
                elif products_:
                        for i,product in enumerate(products_):
                                item=QtWidgets.QListWidgetItem()
                                self.list_searched.addItem(item)
                                item.setText(product.name)
                                item = self.list_searched.item(i)
                                
                checked = self.list_searched
                checked.itemClicked.connect(self.clicked_)
        def fillList(self):
                products_ = session.query(products).all()
                for i,product in enumerate(products_):
                        item=QtWidgets.QListWidgetItem()
                        self.list_searched.addItem(item)
                        item.setText(product.name)
                        item = self.list_searched.item(i)
                checked = self.list_searched
                checked.itemClicked.connect(self.clicked_)

        def calculateTotals(self):
                items = session.query(products).all()
                item_price = session.query(products).filter_by(name=self.product_search.text().upper()).first()
                if item_price:
                        if not self.amount.text() == '' and not self.amount.text().isalpha():
                                amount = float(self.amount.text()) 
                                # Calculate total for the current item
                                total = amount * item_price.price
                                self.label_30.setText(f"ksh. {round(total,2)}")
                                new_receipt = recipts(info=item_price.name, totals=round(total,2))
                                session.add(new_receipt)
                                session.commit()
                                self.product_search.clear()
                                self.amount.clear()
                                # Append the total and item details to the class-level item_totals along with the item name
                                self.item_totals.append({"name": item_price.name, "amount": amount, "price": item_price.price, "total": round(total,2)})
                                # Update the receipt preview
                                self.update_receipt_preview()
                                #QMessageBox.information(self.parent_widget,'success','The item and amount were successfully recieved and added to the customer recipt')
                        else:
                                QMessageBox.warning(self.parent_widget,'Error','The amount data has to be filled with correct values.')

                                
                else:
                        QMessageBox.critical(self.parent_widget,'Item not found',"The Item is not found in the database.")
                        self.label_30.setText("Item not found")

        def update_receipt_preview(self):
        # Create a QTextDocument to hold the content of the receipt preview
                document = QtGui.QTextDocument()

                # Add the content of the receipt widget to the document
                receipt_content = self.get_receipt_content()
                document.setPlainText(receipt_content)

                # Display the receipt preview in your GUI (replace textBrowser with the appropriate widget)
                self.textBrowser.setText(document.toPlainText())

        def get_receipt_content(self):
                content = f"""
                        Customer Receipt
----------------------------------------------------------
Item                    Amount  Cost   Total
----------------------------------------------------------
"""

                # Iterate through the items added and append their details to the content
                for item in self.item_totals:
                        content += f"{item['name']}     {item['amount']}     {item['price']}     {item['total']}\n"

                content += "------------------------------------------------------------\n"
                total_sales = sum(item['total'] for item in self.item_totals)
                content += f"Total:                                             {total_sales}\n"

                return content
        def print_receipt(self):
                # Create a QTextDocument to hold the content of the receipt
                document = QTextDocument()

                # Add the content of the receipt widget to the document
                receipt_content = self.get_receipt_content()
                document.setPlainText(receipt_content)

                # Use QPrintDialog to get printer options from the user
                dialog = QPrintDialog(self.printer)
                if dialog.exec_() == QtWidgets.QDialog.Accepted:
                # Print the document
                        document.print_(self.printer)
                QMessageBox.information(self.parent_widget,'success','The recipts was created successfully')
        def setupUi(self, MainWindow):
                
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1850, 950)
                MainWindow.setMaximumSize(1850,950)
                MainWindow.setMinimumSize(1850,950)
                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap("1x/worldAsset 60.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                MainWindow.setWindowIcon(icon)
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.widget = QtWidgets.QWidget(self.centralwidget)
                self.widget.setGeometry(QtCore.QRect(0, 0, 451, 651))
                self.widget.setStyleSheet("background-color:#08A04B;")
                self.widget.setObjectName("widget")
                self.label = QtWidgets.QLabel(self.widget)
                self.label.setGeometry(QtCore.QRect(70, 10, 311, 31))
                self.label.setStyleSheet("font: 75 18pt \"Rockwell\";\n"
        "COLOR:#E2F516;")
                self.label.setObjectName("label")
                self.line = QtWidgets.QFrame(self.widget)
                self.line.setGeometry(QtCore.QRect(-7, 0, 41, 651))
                self.line.setFrameShape(QtWidgets.QFrame.VLine)
                self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line.setObjectName("line")
                self.make_transactions = QtWidgets.QPushButton(self.widget)
                self.make_transactions.setGeometry(QtCore.QRect(30, 60, 391, 41))
                self.make_transactions.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.make_transactions.setObjectName("make_transactions")
                self.add_inventory = QtWidgets.QPushButton(self.widget)
                self.add_inventory.setGeometry(QtCore.QRect(30, 140, 391, 41))
                self.add_inventory.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.add_inventory.setObjectName("add_inventory")
                self.new_sales = QtWidgets.QPushButton(self.widget)
                self.new_sales.setGeometry(QtCore.QRect(30, 230, 391, 41))
                self.new_sales.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.new_sales.setObjectName("new_sales")
                self.sales_reports = QtWidgets.QPushButton(self.widget)
                self.sales_reports.setGeometry(QtCore.QRect(30, 320, 391, 41))
                self.sales_reports.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.sales_reports.setObjectName("sales_reports")
                self.new_customer = QtWidgets.QPushButton(self.widget)
                self.new_customer.setGeometry(QtCore.QRect(30, 410, 391, 41))
                self.new_customer.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.new_customer.setObjectName("new_customer")
                self.help_btn = QtWidgets.QPushButton(self.widget)
                self.help_btn.setGeometry(QtCore.QRect(30, 500, 391, 41))
                self.help_btn.setStyleSheet("background-color: rgb(243, 227, 195);")
                self.help_btn.setObjectName("help_btn")
                self.quit_btn = QtWidgets.QPushButton(self.widget)
                self.quit_btn.setGeometry(QtCore.QRect(30, 590, 391, 41))
                self.quit_btn.setStyleSheet("background-color: rgb(243, 227, 195);")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("1x/padlock-clipart-password-12.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.quit_btn.setIcon(icon1)
                self.quit_btn.setObjectName("quit_btn")
                self.widget_2 = QtWidgets.QWidget(self.centralwidget)
                self.widget_2.setGeometry(QtCore.QRect(1390, 0, 461, 661))
                self.widget_2.setStyleSheet("background-color: rgb(8, 160, 75);")
                self.widget_2.setObjectName("widget_2")
                self.label_2 = QtWidgets.QLabel(self.widget_2)
                self.label_2.setGeometry(QtCore.QRect(170, 10, 311, 31))
                self.label_2.setStyleSheet("font: 75 18pt \"Rockwell\";\n"
        "color: rgb(226, 245, 22);")
                self.label_2.setObjectName("label_2")
                self.line_2 = QtWidgets.QFrame(self.widget_2)
                self.line_2.setGeometry(QtCore.QRect(440, -10, 20, 671))
                self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
                self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line_2.setObjectName("line_2")
                self.line_3 = QtWidgets.QFrame(self.widget_2)
                self.line_3.setGeometry(QtCore.QRect(0, 0, 20, 661))
                self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
                self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line_3.setObjectName("line_3")
                self.reciept_widget = QtWidgets.QWidget(self.widget_2)
                self.reciept_widget.setGeometry(QtCore.QRect(30, 60, 401, 541))
                self.reciept_widget.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.reciept_widget.setObjectName("reciept_widget")
                self.label_3 = QtWidgets.QLabel(self.reciept_widget)
                self.label_3.setGeometry(QtCore.QRect(150, 20, 211, 31))
                self.label_3.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
                self.label_3.setObjectName("label_3")
                self.label_4 = QtWidgets.QLabel(self.reciept_widget)
                self.label_4.setGeometry(QtCore.QRect(20, 0, 371, 16))
                self.label_4.setObjectName("label_4")
                self.label_5 = QtWidgets.QLabel(self.reciept_widget)
                self.label_5.setGeometry(QtCore.QRect(20, 50, 371, 16))
                self.label_5.setObjectName("label_5")
                self.label_6 = QtWidgets.QLabel(self.reciept_widget)
                self.label_6.setGeometry(QtCore.QRect(20, 70, 47, 14))
                self.label_6.setObjectName("label_6")
                self.label_7 = QtWidgets.QLabel(self.reciept_widget)
                self.label_7.setGeometry(QtCore.QRect(190, 70, 71, 16))
                self.label_7.setObjectName("label_7")
                self.label_8 = QtWidgets.QLabel(self.reciept_widget)
                self.label_8.setGeometry(QtCore.QRect(270, 70, 47, 14))
                self.label_8.setObjectName("label_8")
                self.label_9 = QtWidgets.QLabel(self.reciept_widget)
                self.label_9.setGeometry(QtCore.QRect(330, 70, 47, 14))
                self.label_9.setObjectName("label_9")
                self.item_amount = QtWidgets.QLabel(self.reciept_widget)
                self.item_amount.setGeometry(QtCore.QRect(200, 100, 71, 16))
                self.item_amount.setObjectName("item_amount")
                self.item_name = QtWidgets.QLabel(self.reciept_widget)
                self.item_name.setGeometry(QtCore.QRect(20, 100, 190, 14))
                self.item_name.setObjectName("item_name")
                self.item_total = QtWidgets.QLabel(self.reciept_widget)
                self.item_total.setGeometry(QtCore.QRect(330, 100, 47, 14))
                self.item_total.setObjectName("item_total")
                self.item_cost = QtWidgets.QLabel(self.reciept_widget)
                self.item_cost.setGeometry(QtCore.QRect(270, 100, 47, 14))
                self.item_cost.setObjectName("item_cost")
                self.label_14 = QtWidgets.QLabel(self.reciept_widget)
                self.label_14.setGeometry(QtCore.QRect(190, 130, 71, 16))
                self.label_14.setObjectName("label_14")
                self.label_15 = QtWidgets.QLabel(self.reciept_widget)
                self.label_15.setGeometry(QtCore.QRect(20, 130, 47, 14))
                self.label_15.setObjectName("label_15")
                self.label_16 = QtWidgets.QLabel(self.reciept_widget)
                self.label_16.setGeometry(QtCore.QRect(330, 130, 47, 14))
                self.label_16.setObjectName("label_16")
                self.label_17 = QtWidgets.QLabel(self.reciept_widget)
                self.label_17.setGeometry(QtCore.QRect(270, 130, 47, 14))
                self.label_17.setObjectName("label_17")
                self.label_18 = QtWidgets.QLabel(self.reciept_widget)
                self.label_18.setGeometry(QtCore.QRect(190, 160, 71, 16))
                self.label_18.setObjectName("label_18")
                self.label_19 = QtWidgets.QLabel(self.reciept_widget)
                self.label_19.setGeometry(QtCore.QRect(20, 160, 47, 14))
                self.label_19.setObjectName("label_19")
                self.label_20 = QtWidgets.QLabel(self.reciept_widget)
                self.label_20.setGeometry(QtCore.QRect(330, 160, 47, 14))
                self.label_20.setObjectName("label_20")
                self.label_21 = QtWidgets.QLabel(self.reciept_widget)
                self.label_21.setGeometry(QtCore.QRect(270, 160, 47, 14))
                self.label_21.setObjectName("label_21")
                self.label_22 = QtWidgets.QLabel(self.reciept_widget)
                self.label_22.setGeometry(QtCore.QRect(20, 430, 371, 16))
                self.label_22.setObjectName("label_22")
                self.total_text = QtWidgets.QLabel(self.reciept_widget)
                self.total_text.setGeometry(QtCore.QRect(330, 450, 47, 14))
                self.total_text.setObjectName("total_text")
                self.label_24 = QtWidgets.QLabel(self.reciept_widget)
                self.label_24.setGeometry(QtCore.QRect(20, 450, 47, 14))
                self.label_24.setObjectName("label_24")
                self.print_receipt_btn = QtWidgets.QPushButton(self.widget_2)
                self.print_receipt_btn.setGeometry(QtCore.QRect(20, 610, 121, 41))
                self.print_receipt_btn.setStyleSheet("background-color: rgb(255, 255, 194);")
                self.print_receipt_btn.setObjectName("print_receipt_btn")
                self.cancel_transaction_btn = QtWidgets.QPushButton(self.widget_2)
                self.cancel_transaction_btn.setGeometry(QtCore.QRect(320, 610, 121, 41))
                self.cancel_transaction_btn.setStyleSheet("background-color: rgb(255, 255, 194);")
                self.cancel_transaction_btn.setObjectName("cancel_transaction_btn")
                self.label_25 = QtWidgets.QLabel(self.centralwidget)
                self.label_25.setGeometry(QtCore.QRect(700, 20, 611, 41))
                self.label_25.setStyleSheet("font: 87 18pt \"Segoe UI Black\";")
                self.label_25.setObjectName("label_25")
                self.label_26 = QtWidgets.QLabel(self.centralwidget)
                self.label_26.setGeometry(QtCore.QRect(780, 60, 251, 51))
                self.label_26.setStyleSheet("font: 87 14pt \"Segoe UI Black\";")
                self.label_26.setObjectName("label_26")
                self.label_27 = QtWidgets.QLabel(self.centralwidget)
                self.label_27.setGeometry(QtCore.QRect(470, 160, 521, 41))
                self.label_27.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
                self.label_27.setObjectName("label_27")
                self.label_28 = QtWidgets.QLabel(self.centralwidget)
                self.label_28.setGeometry(QtCore.QRect(470, 440, 521, 41))
                self.label_28.setStyleSheet("font: 14pt \"MS Shell Dlg 2\";")
                self.label_28.setObjectName("label_28")
                self.product_search = QtWidgets.QLineEdit(self.centralwidget)
                self.product_search.setGeometry(QtCore.QRect(700, 150, 541, 61))
                self.product_search.setStyleSheet("font: 14pt \"Franklin Gothic Medium\";")
                self.product_search.setObjectName("product_search")
                self.amount = QtWidgets.QLineEdit(self.centralwidget)
                self.amount.setGeometry(QtCore.QRect(690, 440, 541, 61))
                self.amount.setStyleSheet("font: 14pt \"Franklin Gothic Medium\";")
                self.amount.setInputMethodHints(QtCore.Qt.ImhPreferNumbers)
                self.amount.setObjectName("amount")
                self.list_searched = QtWidgets.QListWidget(self.centralwidget)
                self.list_searched.setGeometry(QtCore.QRect(700, 230, 541, 191))
                self.list_searched.setObjectName("list_searched")
                self.search_btn = QtWidgets.QPushButton(self.centralwidget)
                self.search_btn.setGeometry(QtCore.QRect(1260, 150, 101, 61))
                self.search_btn.setText("")
                self.search_btn.clicked.connect(self.searchFunc)
                icon2 = QtGui.QIcon()
                icon2.addPixmap(QtGui.QPixmap("1x/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.search_btn.setIcon(icon2)
                self.search_btn.setIconSize(QtCore.QSize(20, 20))
                self.search_btn.setDefault(False)
                self.search_btn.setFlat(False)
                self.search_btn.setObjectName("search_btn")
                self.next_product = QtWidgets.QPushButton(self.centralwidget)
                self.next_product.setGeometry(QtCore.QRect(460, 570, 251, 111))
                self.next_product.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
        "background-color: rgb(195, 253, 184);")
                self.next_product.setObjectName("next_product")
                self.post_btn = QtWidgets.QPushButton(self.centralwidget)
                self.post_btn.setGeometry(QtCore.QRect(800, 570, 251, 111))
                self.post_btn.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
        "background-color: rgb(195, 253, 184);")
                self.post_btn.setObjectName("post_btn")
                self.post_btn.clicked.connect(self.post_btn_click)
                self.clear_btn = QtWidgets.QPushButton(self.centralwidget)
                self.clear_btn.setGeometry(QtCore.QRect(1120, 570, 251, 111))
                self.clear_btn.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";\n"
        "background-color: rgb(195, 253, 184);")
                self.clear_btn.setObjectName("clear_btn")
                self.widget_4 = QtWidgets.QWidget(self.centralwidget)
                self.widget_4.setGeometry(QtCore.QRect(460, 700, 911, 181))
                self.widget_4.setStyleSheet("background-color: rgb(100, 233, 134);")
                self.widget_4.setObjectName("widget_4")
                self.label_29 = QtWidgets.QLabel(self.widget_4)
                self.label_29.setGeometry(QtCore.QRect(20, 10, 311, 31))
                self.label_29.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
                self.label_29.setObjectName("label_29")
                self.label_30 = QtWidgets.QLabel(self.widget_4)
                self.label_30.setGeometry(QtCore.QRect(660, 10, 301, 31))
                self.label_30.setStyleSheet("font: 12pt \"Stencil\";")
                self.label_30.setObjectName("label_30")
                self.label_30.setText("ksh. 0.00")
                self.line_4 = QtWidgets.QFrame(self.widget_4)
                self.line_4.setGeometry(QtCore.QRect(0, 70, 911, 16))
                self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
                self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.next_product.clicked.connect(self.calculateTotals)
                self.line_4.setObjectName("line_4")
                self.label_31 = QtWidgets.QLabel(self.widget_4)
                self.label_31.setGeometry(QtCore.QRect(20, 100, 571, 31))
                self.label_31.setObjectName("label_31")
                self.label_32 = QtWidgets.QLabel(self.widget_4)
                self.label_32.setGeometry(QtCore.QRect(20, 130, 571, 31))
                self.label_32.setObjectName("label_32")
                MainWindow.setCentralWidget(self.centralwidget)
                self.menubar = QtWidgets.QMenuBar(MainWindow)
                self.menubar.setGeometry(QtCore.QRect(0, 0, 1850, 22))
                self.menubar.setStyleSheet("background-color:#36F57F;")
                self.menubar.setObjectName("menubar")
                self.menuMain = QtWidgets.QMenu(self.menubar)
                self.menuMain.setObjectName("menuMain")
                self.menuInventory = QtWidgets.QMenu(self.menubar)
                self.menuInventory.setObjectName("menuInventory")
                self.menuSales = QtWidgets.QMenu(self.menubar)
                self.menuSales.setObjectName("menuSales")
                self.menuCustomer = QtWidgets.QMenu(self.menubar)
                self.menuCustomer.setObjectName("menuCustomer")
                self.menuReports = QtWidgets.QMenu(self.menubar)
                self.menuReports.setObjectName("menuReports")
                self.menuAbout = QtWidgets.QMenu(self.menubar)
                self.menuAbout.setObjectName("menuAbout")
                self.menuHelp = QtWidgets.QMenu(self.menubar)
                self.menuHelp.setObjectName("menuHelp")
                self.fillList()
                MainWindow.setMenuBar(self.menubar)
                self.statusbar = QtWidgets.QStatusBar(MainWindow)
                self.statusbar.setObjectName("statusbar")
                MainWindow.setStatusBar(self.statusbar)
                self.actionHome = QtWidgets.QAction(MainWindow)
                icon3 = QtGui.QIcon()
                icon3.addPixmap(QtGui.QPixmap("1x/homeAsset 46.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionHome.setIcon(icon3)
                self.actionHome.setObjectName("actionHome")
                self.actionExit = QtWidgets.QAction(MainWindow)
                icon4 = QtGui.QIcon()
                icon4.addPixmap(QtGui.QPixmap("1x/closeAsset 43.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionExit.setIcon(icon4)
                self.actionExit.setObjectName("actionExit")
                self.actionView_Inventory = QtWidgets.QAction(MainWindow)
                icon5 = QtGui.QIcon()
                icon5.addPixmap(QtGui.QPixmap("1x/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionView_Inventory.setIcon(icon5)
                self.actionView_Inventory.setObjectName("actionView_Inventory")
                self.actionAdd_Product = QtWidgets.QAction(MainWindow)
                icon6 = QtGui.QIcon()
                icon6.addPixmap(QtGui.QPixmap("1x/max.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionAdd_Product.setIcon(icon6)
                self.actionAdd_Product.setObjectName("actionAdd_Product")
                self.actionUpdate_Product = QtWidgets.QAction(MainWindow)
                icon7 = QtGui.QIcon()
                icon7.addPixmap(QtGui.QPixmap("1x/settAsset 50.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionUpdate_Product.setIcon(icon7)
                self.actionUpdate_Product.setObjectName("actionUpdate_Product")
                self.actionRemove_Product = QtWidgets.QAction(MainWindow)
                icon8 = QtGui.QIcon()
                icon8.addPixmap(QtGui.QPixmap("1x/cleanAsset 59.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionRemove_Product.setIcon(icon8)
                self.actionRemove_Product.setObjectName("actionRemove_Product")
                self.actionNew_Sales = QtWidgets.QAction(MainWindow)
                icon9 = QtGui.QIcon()
                icon9.addPixmap(QtGui.QPixmap("1x/dragAsset 52.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionNew_Sales.setIcon(icon9)
                self.actionNew_Sales.setObjectName("actionNew_Sales")
                self.actionView_Sales_History = QtWidgets.QAction(MainWindow)
                icon10 = QtGui.QIcon()
                icon10.addPixmap(QtGui.QPixmap("1x/cloudAsset 48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionView_Sales_History.setIcon(icon10)
                self.actionView_Sales_History.setObjectName("actionView_Sales_History")
                self.actionView_Customer_List = QtWidgets.QAction(MainWindow)
                self.textBrowser = QtWidgets.QTextBrowser(self.reciept_widget)
                self.textBrowser.setGeometry(QtCore.QRect(0, 0, 401, 541))
                self.textBrowser.setObjectName("textBrowser")
                self.textBrowser.setText(
                "\n"
                "                                     \n"
                "                            Customer Reciept\n"
                "-----------------------------------------------------------\n"
                "Item                           Amount     Price     Total\n")
                
                icon11 = QtGui.QIcon()
                icon11.addPixmap(QtGui.QPixmap("1x/peopleAsset 62.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionView_Customer_List.setIcon(icon11)
                self.actionView_Customer_List.setObjectName("actionView_Customer_List")
                self.actionAdd_Customer = QtWidgets.QAction(MainWindow)
                icon12 = QtGui.QIcon()
                icon12.addPixmap(QtGui.QPixmap("1x/peple.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionAdd_Customer.setIcon(icon12)
                self.actionAdd_Customer.setObjectName("actionAdd_Customer")
                self.actionUpdate_Customer = QtWidgets.QAction(MainWindow)
                self.actionUpdate_Customer.setIcon(icon7)
                self.actionUpdate_Customer.setObjectName("actionUpdate_Customer")
                self.actionRemove_Customer = QtWidgets.QAction(MainWindow)
                self.actionRemove_Customer.setIcon(icon8)
                self.actionRemove_Customer.setObjectName("actionRemove_Customer")
                self.actionGenerate_Sales_Reports = QtWidgets.QAction(MainWindow)
                icon13 = QtGui.QIcon()
                icon13.addPixmap(QtGui.QPixmap("1x/androidAsset 49.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionGenerate_Sales_Reports.setIcon(icon13)
                self.actionGenerate_Sales_Reports.setObjectName("actionGenerate_Sales_Reports")
                self.actionGenerate_Inventory_Reports = QtWidgets.QAction(MainWindow)
                self.actionGenerate_Inventory_Reports.setIcon(icon5)
                self.actionGenerate_Inventory_Reports.setObjectName("actionGenerate_Inventory_Reports")
                self.actionGenerate_Customer_Reports = QtWidgets.QAction(MainWindow)
                self.actionGenerate_Customer_Reports.setIcon(icon11)
                self.actionGenerate_Customer_Reports.setObjectName("actionGenerate_Customer_Reports")
                self.actionAbout_home = QtWidgets.QAction(MainWindow)
                self.actionAbout_home.setIcon(icon3)
                self.actionAbout_home.setObjectName("actionAbout_home")
                self.actionAbout_Creator = QtWidgets.QAction(MainWindow)
                icon14 = QtGui.QIcon()
                icon14.addPixmap(QtGui.QPixmap("1x/login.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionAbout_Creator.setIcon(icon14)
                self.actionAbout_Creator.setObjectName("actionAbout_Creator")
                self.actionVisit_Website = QtWidgets.QAction(MainWindow)
                self.actionVisit_Website.setIcon(icon)
                self.actionVisit_Website.setObjectName("actionVisit_Website")
                self.actionCall_Developer = QtWidgets.QAction(MainWindow)
                icon15 = QtGui.QIcon()
                icon15.addPixmap(QtGui.QPixmap("1x/bookAsset 57.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.actionCall_Developer.setIcon(icon15)
                self.actionCall_Developer.setObjectName("actionCall_Developer")
                self.menuMain.addAction(self.actionHome)
                self.menuMain.addAction(self.actionExit)
                self.menuInventory.addAction(self.actionView_Inventory)
                self.menuInventory.addAction(self.actionAdd_Product)
                self.menuInventory.addAction(self.actionUpdate_Product)
                self.menuInventory.addAction(self.actionRemove_Product)
                self.menuSales.addAction(self.actionNew_Sales)
                self.menuSales.addAction(self.actionView_Sales_History)
                self.menuCustomer.addAction(self.actionView_Customer_List)
                self.menuCustomer.addAction(self.actionAdd_Customer)
                self.menuCustomer.addAction(self.actionUpdate_Customer)
                self.menuCustomer.addAction(self.actionRemove_Customer)
                self.menuReports.addAction(self.actionGenerate_Sales_Reports)
                self.menuReports.addAction(self.actionGenerate_Inventory_Reports)
                self.menuReports.addAction(self.actionGenerate_Customer_Reports)
                self.menuAbout.addAction(self.actionAbout_home)
                self.menuAbout.addAction(self.actionAbout_Creator)
                self.menuHelp.addAction(self.actionVisit_Website)
                self.menuHelp.addAction(self.actionCall_Developer)
                self.menubar.addAction(self.menuMain.menuAction())
                self.menubar.addAction(self.menuInventory.menuAction())
                self.menubar.addAction(self.menuSales.menuAction())
                self.menubar.addAction(self.menuCustomer.menuAction())
                self.menubar.addAction(self.menuReports.menuAction())
                self.menubar.addAction(self.menuAbout.menuAction())
                self.menubar.addAction(self.menuHelp.menuAction())

                self.retranslateUi(MainWindow)
                self.cancel_transaction_btn.clicked.connect(self.cancelReceipt)
                self.actionAbout_Creator.triggered.connect(self.aboutCreator)
                self.actionAbout_home.triggered.connect(self.aboutHome)
                self.add_inventory.clicked.connect(self.addInventory)
                self.new_sales.clicked.connect(self.newSales)
                self.actionNew_Sales.triggered.connect(self.newSales)
                self.sales_reports.clicked.connect(self.generateSalesReports)
                self.new_customer.clicked.connect(self.newCustomer)
                self.help_btn.clicked.connect(self.helpBrowser)
                self.actionVisit_Website.triggered.connect(self.helpBrowser)
                self.actionCall_Developer.triggered.connect(self.callDeveloper)
                self.actionView_Inventory.triggered.connect(self.viewInventory)
                self.actionView_Customer_List.triggered.connect(self.viewCustomerList)
                self.actionView_Sales_History.triggered.connect(self.viewSalesHistory)
                self.actionAdd_Product.triggered.connect(self.addProduct)
                self.actionAdd_Customer.triggered.connect(self.addCustomer)
                self.actionUpdate_Customer.triggered.connect(self.updateCustomer)
                self.actionUpdate_Product.triggered.connect(self.updateProduct)
                self.actionRemove_Customer.triggered.connect(self.removeCustomer)
                self.actionRemove_Product.triggered.connect(self.removeProduct)
                self.actionGenerate_Customer_Reports.triggered.connect(self.viewCustomerList)
                self.actionGenerate_Inventory_Reports.triggered.connect(self.viewInventory)
                self.actionGenerate_Sales_Reports.triggered.connect(self.generateSalesReports)
                self.actionExit.triggered.connect(MainWindow.close) # type: ignore
                self.quit_btn.clicked.connect(MainWindow.close) # type: ignore
                self.clear_btn.clicked.connect(self.product_search.clear) # type: ignore
                self.clear_btn.clicked.connect(self.amount.clear) # type: ignore
                self.printer = QPrinter()
                # Connect the print_receipt_btn to the print_receipt function
                self.print_receipt_btn.clicked.connect(self.print_receipt)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "SuperMarket"))
                self.label.setText(_translate("MainWindow", "QUICK ACTIONS"))
                self.make_transactions.setText(_translate("MainWindow", "Make Transactions"))
                self.add_inventory.setText(_translate("MainWindow", "Add Inventory"))
                self.new_sales.setText(_translate("MainWindow", "New Sales"))
                self.sales_reports.setText(_translate("MainWindow", "Generate Sales Reports"))
                self.new_customer.setText(_translate("MainWindow", "New Customer"))
                self.help_btn.setText(_translate("MainWindow", "Help"))
                self.quit_btn.setText(_translate("MainWindow", "Quit"))
                self.print_receipt_btn.setText(_translate("MainWindow", "Print Receipt"))
                self.cancel_transaction_btn.setText(_translate("MainWindow", "Cancel"))
                self.label_25.setText(_translate("MainWindow", "SUPERMARKET POS SYSTEM"))
                self.label_26.setText(_translate("MainWindow", "MAKE PAYMENTS"))
                self.label_27.setText(_translate("MainWindow", "Name of product: "))
                self.label_28.setText(_translate("MainWindow", "Amount: "))
                self.amount.setPlaceholderText(_translate("MainWindow", "Amount , Only numbers allowed"))
                __sortingEnabled = self.list_searched.isSortingEnabled()
                self.list_searched.setSortingEnabled(False)
                self.list_searched.setSortingEnabled(__sortingEnabled)
                self.next_product.setText(_translate("MainWindow", "NEXT PRODUCT"))
                self.post_btn.setText(_translate("MainWindow", "POST"))
                self.clear_btn.setText(_translate("MainWindow", "CLEAR"))
                self.label_29.setText(_translate("MainWindow", "TOTAL :"))
                self.label_31.setText(_translate("MainWindow", "Hi, Here is a quick quide to making payments.Click inside the box of the product, type a product name and search."))
                self.label_32.setText(_translate("MainWindow", "The product will be shown on the box directly below the product field. Click to select it and enter the amount."))
                self.menuMain.setTitle(_translate("MainWindow", "Main"))
                self.menuInventory.setTitle(_translate("MainWindow", "Inventory"))
                self.menuSales.setTitle(_translate("MainWindow", "Sales"))
                self.menuCustomer.setTitle(_translate("MainWindow", "Customer"))
                self.menuReports.setTitle(_translate("MainWindow", "Reports"))
                self.menuAbout.setTitle(_translate("MainWindow", "About"))
                self.menuHelp.setTitle(_translate("MainWindow", "Help"))
                self.actionHome.setText(_translate("MainWindow", "Home"))
                self.actionExit.setText(_translate("MainWindow", "Exit"))
                self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
                self.actionView_Inventory.setText(_translate("MainWindow", "View Inventory"))
                self.actionAdd_Product.setText(_translate("MainWindow", "Add Product"))
                self.actionAdd_Product.setShortcut(_translate("MainWindow", "Ctrl+A"))
                self.actionUpdate_Product.setText(_translate("MainWindow", "Update Product"))
                self.actionRemove_Product.setText(_translate("MainWindow", "Remove Product"))
                self.actionRemove_Product.setShortcut(_translate("MainWindow", "Ctrl+D"))
                self.actionNew_Sales.setText(_translate("MainWindow", "New Sales"))
                self.actionNew_Sales.setShortcut(_translate("MainWindow", "Ctrl+N, Ctrl+S"))
                self.actionView_Sales_History.setText(_translate("MainWindow", "View Sales History"))
                self.actionView_Sales_History.setShortcut(_translate("MainWindow", "Ctrl+S"))
                self.actionView_Customer_List.setText(_translate("MainWindow", "View Customer List"))
                self.actionView_Customer_List.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
                self.actionAdd_Customer.setText(_translate("MainWindow", "Add Customer"))
                self.actionAdd_Customer.setShortcut(_translate("MainWindow", "Ctrl+N, C"))
                self.actionUpdate_Customer.setText(_translate("MainWindow", "Update Customer"))
                self.actionRemove_Customer.setText(_translate("MainWindow", "Remove Customer"))
                self.actionRemove_Customer.setShortcut(_translate("MainWindow", "Ctrl+C, D"))
                self.actionGenerate_Sales_Reports.setText(_translate("MainWindow", "Generate Sales Reports"))
                self.actionGenerate_Inventory_Reports.setText(_translate("MainWindow", "Generate Inventory Reports"))
                self.actionGenerate_Customer_Reports.setText(_translate("MainWindow", "Generate Customer Reports"))
                self.actionAbout_home.setText(_translate("MainWindow", "About home"))
                self.actionAbout_Creator.setText(_translate("MainWindow", "About Creator"))
                self.actionVisit_Website.setText(_translate("MainWindow", "Visit Website"))
                self.actionCall_Developer.setText(_translate("MainWindow", "Call Developer"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

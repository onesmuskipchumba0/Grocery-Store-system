# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'inventory_dashboard.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import QApplication, QFileDialog, QInputDialog, QLineEdit, QMainWindow, QPushButton, QVBoxLayout, QWidget
from models import products,session
import add_product,update_product,delete_product
import pandas as pd 
import numpy as np 
import os
import sys
class Ui_Form(object):
    def __init__(self):
        # Create a QWidget instance to be used as the parent for file dialogs
        self.parent_widget = QtWidgets.QWidget()
    def deleteProduct(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = delete_product.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show() 
    def editProduct(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = update_product.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show() 
    def exportToExcel(self):
           product_no = []
           names = []
           units =[]
           price = []
           category=[]
           date = []
           datas = session.query(products).all()
           for data in datas:
                  product_no.append(data.products_no)
                  names.append(data.name)
                  units.append(data.units)
                  price.append(data.price)
                  category.append(data.category)
                  date.append(data.date)
           df = pd.DataFrame({'Number':product_no,'Name':names,'Units':units,'Price':price,'Category':category,"Date Added":date})
           directory = QFileDialog.getExistingDirectory(self.parent_widget, "Select Directory", options=QFileDialog.ShowDirsOnly)

           if directory:
                file_path = os.path.join(directory, "viewinventory.xlsx")

            # Export the DataFrame to Excel
                try:
                        df.to_excel(file_path, index=False)
                        print(f"Exported to: {file_path}")
                        QMessageBox.information(self.parent_widget, "Export Successful", f"Exported to: {file_path}")
                except Exception as e:
                        print(f"Error exporting to Excel: {e}")
                        QMessageBox.critical(self.parent_widget, "Export Error", f"Error exporting to Excel: {e}")

    def exportToCsv(self):
           product_no = []
           names = []
           units =[]
           price = []
           category=[]
           date = []
           datas = session.query(products).all()
           for data in datas:
                  product_no.append(data.products_no)
                  names.append(data.name)
                  units.append(data.units)
                  price.append(data.price)
                  category.append(data.category)
                  date.append(data.date)
           df = pd.DataFrame({'Number':product_no,'Name':names,'Units':units,'Price':price,'Category':category,"Date Added":date})
           directory = QFileDialog.getExistingDirectory(self.parent_widget, "Select Directory", options=QFileDialog.ShowDirsOnly)

           if directory:
                file_path = os.path.join(directory, "viewInventory.csv")

            # Export the DataFrame to Excel
                try:
                        df.to_csv(file_path, index=False)
                        print(f"Exported to: {file_path}")
                        QMessageBox.information(self.parent_widget, "Export Successful", f"Exported to: {file_path}")
                except Exception as e:
                        print(f"Error exporting to Excel: {e}")
                        QMessageBox.critical(self.parent_widget, "Export Error", f"Error exporting to Excel: {e}")
    def exitApplication(self):
           sys.exit()
    def addItems(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = add_product.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show() 
    def filterFunc(self):
        food_stuffs = session.query(products).filter_by(category='Food Stuff').all()
        groceries = session.query(products).filter_by(category='Groceries').all()
        Stationary = session.query(products).filter_by(category='Stationary').all()
        hardware =session.query(products).filter_by(category='Hardware').all()
        software=session.query(products).filter_by(category='Software').all()

        for i, parent in enumerate(food_stuffs):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        for i, parent in enumerate(groceries):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        for i, parent in enumerate(Stationary):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        for i, parent in enumerate(hardware):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        for i, parent in enumerate(software):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        
    def searchFunc(self):
         if self.search.text() == '':
              pass
         else:
              fetched_items = session.query(products).filter(products.name.contains(self.search.text().upper())).all()
              self.tableWidget.setRowCount(len(fetched_items))
              for i, parent in enumerate(fetched_items):
                                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
                
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1850, 950)
        Form.setMaximumSize(1850,950)
        Form.setMinimumSize(1850,950)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(0, 0, 1851, 191))
        self.widget.setStyleSheet("background-color: rgb(100, 233, 134);")
        self.widget.setObjectName("widget")
        self.line = QtWidgets.QFrame(self.widget)
        self.line.setGeometry(QtCore.QRect(0, 60, 1851, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(840, 20, 801, 41))
        self.label.setStyleSheet("font: 75 20pt \"MS Shell Dlg 2\";")
        self.label.setObjectName("label")
        self.search = QtWidgets.QLineEdit(self.widget)
        self.search.setGeometry(QtCore.QRect(70, 80, 641, 91))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.search.setFont(font)
        self.search.setStyleSheet("background-color: rgb(144, 238, 144);\n"
"color:rgb(3, 62, 62)")
        self.search.setObjectName("search")
        self.search_btn = QtWidgets.QPushButton(self.widget)
        self.search_btn.setGeometry(QtCore.QRect(744, 82, 171, 81))
        self.search_btn.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.search_btn.setText("Search")
        self.search_btn.setIconSize(QtCore.QSize(30, 30))
        self.search_btn.setObjectName("search_btn")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(990, 85, 481, 61))
        self.label_2.setStyleSheet("font: 16pt \"MS Shell Dlg 2\";")
        self.label_2.setObjectName("label_2")
              
        self.add_items = QtWidgets.QPushButton(self.widget)
        self.add_items.setGeometry(QtCore.QRect(1480, 90, 201, 71))
        self.add_items.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.add_items.setObjectName("add_items")
        self.home_btn = QtWidgets.QPushButton(self.widget)
        self.home_btn.setGeometry(QtCore.QRect(1710, 90, 91, 71))
        self.home_btn.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.home_btn.setObjectName("home_btn")
        self.widget_2 = QtWidgets.QWidget(Form)
        self.widget_2.setGeometry(QtCore.QRect(20, 250, 1811, 771))
        self.widget_2.setStyleSheet("background-color: rgb(34, 206, 131);")
        self.widget_2.setObjectName("widget_2")
        self.tableWidget = QtWidgets.QTableWidget(self.widget_2)
        self.tableWidget.setGeometry(QtCore.QRect(350, 20, 891, 661))
        self.tableWidget.setStyleSheet("background-color: #FAEBD7;")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        products_ = session.query(products).all()
        self.tableWidget.setRowCount(len(products_))
        for i, parent in enumerate(products_):
                self.tableWidget.setVerticalHeaderItem(i, QtWidgets.QTableWidgetItem(str(parent.products_no)))
                self.tableWidget.setItem(i, 0, QtWidgets.QTableWidgetItem(parent.name))
                self.tableWidget.setItem(i, 1, QtWidgets.QTableWidgetItem(str(parent.price)))
                self.tableWidget.setItem(i, 2, QtWidgets.QTableWidgetItem(parent.category))
                self.tableWidget.setItem(i, 3, QtWidgets.QTableWidgetItem(str(parent.date)))
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.line_2 = QtWidgets.QFrame(self.widget_2)
        self.line_2.setGeometry(QtCore.QRect(1343, 0, 20, 701))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.export_to_excel = QtWidgets.QPushButton(self.widget_2)
        self.export_to_excel.setGeometry(QtCore.QRect(1380, 30, 391, 71))
        self.export_to_excel.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.export_to_excel.setObjectName("export_to_excel")
        self.export_to_excel.clicked.connect(self.exportToExcel)
        self.export_to_csv = QtWidgets.QPushButton(self.widget_2)
        self.export_to_csv.setGeometry(QtCore.QRect(1380, 160, 391, 71))
        self.export_to_csv.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.export_to_csv.setObjectName("export_to_csv")
        self.export_to_csv.clicked.connect(self.exportToCsv)
        self.edit_items = QtWidgets.QPushButton(self.widget_2)
        self.edit_items.setGeometry(QtCore.QRect(1380, 290, 391, 71))
        self.edit_items.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.edit_items.setObjectName("edit_items")
        self.edit_items.clicked.connect(self.editProduct)
        self.delete_items = QtWidgets.QPushButton(self.widget_2)
        self.delete_items.setGeometry(QtCore.QRect(1380, 420, 391, 71))
        self.delete_items.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.delete_items.setObjectName("delete_items")
        self.delete_items.clicked.connect(self.deleteProduct)
        self.quit = QtWidgets.QPushButton(self.widget_2)
        self.quit.setGeometry(QtCore.QRect(1380, 540, 391, 71))
        self.quit.setStyleSheet("background-color: rgb(255, 250, 205);")
        self.quit.setObjectName("quit")
        self.quit.clicked.connect(self.exitApplication)
        self.line_3 = QtWidgets.QFrame(self.widget_2)
        self.line_3.setGeometry(QtCore.QRect(1780, 0, 20, 701))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.line_4 = QtWidgets.QFrame(self.widget_2)
        self.line_4.setGeometry(QtCore.QRect(300, 0, 20, 701))
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.textBrowser = QtWidgets.QTextBrowser(self.widget_2)
        self.textBrowser.setGeometry(QtCore.QRect(20, 70, 281, 281))
        self.textBrowser.setObjectName("textBrowser")
        self.label_3 = QtWidgets.QLabel(self.widget_2)
        self.label_3.setGeometry(QtCore.QRect(20, 30, 111, 31))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.widget_2)
        self.label_4.setGeometry(QtCore.QRect(20, 380, 131, 16))
        self.label_4.setObjectName("label_4")
        self.line_5 = QtWidgets.QFrame(self.widget_2)
        self.line_5.setGeometry(QtCore.QRect(0, 360, 301, 16))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.line_6 = QtWidgets.QFrame(self.widget_2)
        self.line_6.setGeometry(QtCore.QRect(0, 10, 301, 16))
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.widget_2)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 410, 291, 281))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.search_btn.clicked.connect(self.searchFunc)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText("Name")
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText("Price")
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText("Category")
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText("Date Added")
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.retranslateUi(Form)
        self.add_items.clicked.connect(Form.repaint) # type: ignore
        self.add_items.clicked.connect(self.addItems)
        self.home_btn.clicked.connect(Form.close) # type: ignore
        self.export_to_excel.clicked.connect(Form.update) # type: ignore
        self.export_to_csv.clicked.connect(Form.update) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Inventory Dashboard"))
        self.label.setText(_translate("Form", "INVENTORY"))
        self.search.setPlaceholderText(_translate("Form", "Search..."))
        self.label_2.setText(_translate("Form", "Continue by clicking buttons"))
        self.add_items.setText(_translate("Form", "Add Items"))
        self.home_btn.setText(_translate("Form", "HOME"))
        self.export_to_excel.setText(_translate("Form", "EXPORT TO EXCEL"))
        self.export_to_csv.setText(_translate("Form", "EXPORT TO CSV"))
        self.edit_items.setText(_translate("Form", "EDIT ITEMS"))
        self.delete_items.setText(_translate("Form", "DELETE ITEMS"))
        self.quit.setText(_translate("Form", "QUIT APPLICATION"))
        self.textBrowser.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Hi! Welcome to the dashboard. This is the place where you can view all the data concerning your store.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Every table shown can be exported to excel or csv for data analytics and visualisation. If this is the sales page, you can view your data here and also export it to excel for further editing.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The search option lets you search the store for registered data.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Good Luck!!!</p></body></html>"))
        self.label_3.setText(_translate("Form", "A Bit of Help:"))
        self.label_4.setText(_translate("Form", "About the buttons"))
        self.textBrowser_2.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The buttons are of most importance,</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The export function as you may have guessed, Exports the data to excel.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The add item buttons shows a register page and allows you to add new items to teh inventory.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The update and delete items lets you delete items from the database or update them, Be carefull because these changes cannot be reverted.</p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form_inventory= QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form_inventory)
    Form_inventory.show()
    sys.exit(app.exec_())
